package com.learn.java.javacore.generics;



/**
 * The class is not generic, but it has only a generic method which uses generic types.
 * Generic methods can be defined inside both generic and ordinary classes.
 * !!!! The type <T> is always declared before the actual use of it.
 * ype erasure happens for generic methods also. After compilation, the type parameter is erased and replace
 * by it's bound type or Object if there is no bound type.
 * In case of polymorphic method invocation, compiler creates synthesized bridge methods
 * (Method generated by type erasure to ensure that subtyping works. Has the same signature as super method but delegates call to subtype method).
 * Created by x01027037 on 21.01.2016.
 */
public class GenericMethod {

    public static <T> T getT(T[] tArray,T search){
        for(T t : tArray){
            if (t.equals(search)){
                return t;
            }
        }
        return null;
    }

}
